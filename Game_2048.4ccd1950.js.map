{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        console.log(initialState);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.moveHorizontally(\"right\");\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.moveHorizontally(\"left\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.moveVertically(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.moveVertically(\"down\");\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore(num) {\n                var score = document.querySelector(\".game-score\");\n                var currentScore = parseInt(score.innerHTML) || 0;\n                score.innerHTML = currentScore + num;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                var tbody = document.querySelector(\"tbody\");\n                var rows = tbody.rows;\n                var table = [];\n                for(var i = 0; i < rows.length; i++){\n                    table[i] = [];\n                    for(var j = 0; j < rows[i].cells.length; j++){\n                        var cell = rows[i].cells[j];\n                        table[i].push(parseInt(cell.innerHTML) || 0);\n                    }\n                }\n                return table;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                if (this.hasWon()) return \"win\";\n                if (this.hasLose()) return \"lose\";\n                if (this.isPlaying()) return \"playing\";\n                if (this.isIdle()) return \"idle\";\n            }\n        },\n        {\n            key: \"setStatus\",\n            value: function setStatus(newStatus) {\n                return newStatus;\n            }\n        },\n        {\n            key: \"hasWon\",\n            value: function hasWon() {\n                var tbody = document.querySelector(\"tbody\");\n                var rows = tbody.rows;\n                for(var i = 0; i < rows.length; i++){\n                    var cells = rows[i].cells;\n                    for(var j = 0; j < cells.length; j++){\n                        if (parseInt(cells[j].innerHTML) === 2048) return true;\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"hasLose\",\n            value: function hasLose() {\n                var tbody = document.querySelector(\"tbody\");\n                var rows = tbody.rows;\n                var table = [];\n                for(var i = 0; i < rows.length; i++){\n                    table[i] = [];\n                    var cells = rows[i].cells;\n                    for(var j = 0; j < cells.length; j++)table[i][j] = parseInt(cells[j].innerHTML) || 0;\n                }\n                for(var i1 = 0; i1 < table.length; i1++)for(var j1 = 0; j1 < table[i1].length; j1++){\n                    if (table[i1][j1] === 0) return false;\n                }\n                for(var i2 = 0; i2 < table.length; i2++)for(var j2 = 0; j2 < table[i2].length - 1; j2++){\n                    if (table[i2][j2] === table[i2][j2 + 1]) return false;\n                }\n                for(var i3 = 0; i3 < table.length - 1; i3++)for(var j3 = 0; j3 < table.length - 1; j3++){\n                    if (table[i3][j3] === table[i3 + 1][j3]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"isIdle\",\n            value: function isIdle() {\n                var tdElements = document.querySelectorAll(\"tbody td\");\n                for(var i = 0; i < tdElements.length; i++){\n                    if (parseInt(tdElements[i].innerHTML) > 0) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"isPlaying\",\n            value: function isPlaying() {\n                var idle = this.isIdle();\n                var lose = this.hasLose();\n                var win = this.hasWon();\n                if (!idle && !lose && !win) return true;\n                return false;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                var startButton = document.querySelector(\".button.start\");\n                startButton.classList.add(\"restart\");\n                startButton.classList.remove(\"start\");\n                startButton.textContent = \"Restart\";\n                var tdElements = document.querySelectorAll(\".field-cell\");\n                var tdArray = Array.from(tdElements);\n                var firstElement, secondElement;\n                var uniqueElements = new Set();\n                while(uniqueElements.size !== 2){\n                    firstElement = tdArray[$3d28d7f1aac198f5$var$getRandomInt(tdArray.length)];\n                    secondElement = tdArray[$3d28d7f1aac198f5$var$getRandomInt(tdArray.length)];\n                    uniqueElements = new Set([\n                        firstElement,\n                        secondElement\n                    ]);\n                }\n                if (uniqueElements.size === 2) {\n                    firstElement.classList.add(\"field-cell--2\");\n                    firstElement.innerHTML = \"2\";\n                    secondElement.classList.add(\"field-cell--2\");\n                    secondElement.innerHTML = \"2\";\n                }\n                var startMessage = document.querySelector(\".message-start\");\n                if (startMessage) startMessage.remove();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                var restartButton = document.querySelector(\".button.restart\");\n                restartButton.classList.remove(\"restart\");\n                restartButton.classList.add(\"start\");\n                restartButton.textContent = \"Start\";\n                var tdElements = document.querySelectorAll(\".field-cell\");\n                var tdArray = Array.from(tdElements);\n                tdArray.forEach(function(element) {\n                    element.className = \"field-cell\";\n                    element.innerHTML = \"\";\n                });\n                var loseWindow = document.querySelector(\".lose-window\");\n                if (loseWindow) loseWindow.remove();\n                var winWindow = document.querySelector(\".win-window\");\n                if (winWindow) winWindow.remove();\n                var score = document.querySelector(\".game-score\");\n                if (score) score.innerHTML = \"0\";\n                this.setStatus(\"playing\");\n                var startMessage = document.createElement(\"p\");\n                startMessage.className = \"message message-start\";\n                startMessage.innerHTML = 'Press \"Start\" to begin game. Good luck!';\n                var messageContainer = document.querySelector(\".message-container\");\n                messageContainer.appendChild(startMessage);\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"addNewCell\",\n            value: function addNewCell() {\n                var tdElements = document.querySelectorAll(\"tbody td\");\n                var emptyCells = Array.from(tdElements).filter(function(cell) {\n                    return cell.textContent.trim() === \"\";\n                });\n                if (emptyCells.length > 0) {\n                    var newElement = emptyCells[$3d28d7f1aac198f5$var$getRandomInt(emptyCells.length)];\n                    var randomNumber = $3d28d7f1aac198f5$var$getRandomInt(2);\n                    if (randomNumber === 0) {\n                        newElement.innerHTML = \"2\";\n                        newElement.classList.add(\"field-cell--2\");\n                    } else if (randomNumber === 1) {\n                        newElement.innerHTML = \"4\";\n                        newElement.classList.add(\"field-cell--4\");\n                    }\n                }\n            }\n        },\n        {\n            key: \"moveHorizontally\",\n            value: function moveHorizontally(direction) {\n                var table = this.getState();\n                var newTable = [];\n                var tbody = document.querySelector(\"tbody\");\n                var rows = tbody.rows;\n                var totalScore = 0;\n                var tableChanged = false;\n                for(var i = 0; i < table.length; i++){\n                    var row = table[i].slice();\n                    var originalRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                    row = row.filter(function(val) {\n                        return val > 0;\n                    });\n                    for(var k = 0; k < row.length - 1; k++)if (row[k] === row[k + 1]) {\n                        row[k] *= 2;\n                        totalScore += row[k];\n                        tableChanged = true;\n                        row[k + 1] = 0;\n                    }\n                    row = row.filter(function(val) {\n                        return val > 0;\n                    });\n                    while(row.length !== 4){\n                        if (direction === \"right\") row.unshift(0);\n                        else if (direction === \"left\") row.push(0);\n                    }\n                    newTable.push(row);\n                    if (!$3d28d7f1aac198f5$var$arraysEqual(originalRow, row)) tableChanged = true;\n                }\n                for(var i1 = 0; i1 < newTable.length; i1++)for(var j = 0; j < newTable[i1].length; j++){\n                    rows[i1].cells[j].innerHTML = newTable[i1][j] > 0 ? \"\".concat(newTable[i1][j]) : \"\";\n                    rows[i1].cells[j].className = \"field-cell\";\n                    if (newTable[i1][j] > 0) rows[i1].cells[j].classList.add(\"field-cell--\".concat(newTable[i1][j]));\n                }\n                this.getScore(totalScore);\n                if (tableChanged) this.addNewCell();\n            }\n        },\n        {\n            key: \"moveVertically\",\n            value: function moveVertically(direction) {\n                var table = this.getState();\n                var newTable = [];\n                var tbody = document.querySelector(\"tbody\");\n                var rows = tbody.rows;\n                var totalScore = 0;\n                var tableChanged = false;\n                for(var i = 0; i < table[0].length; i++){\n                    var cell = [];\n                    for(var j = 0; j < table.length; j++)cell.push(table[j][i]);\n                    cell = cell.slice();\n                    var originalCell = (0, $227c6742e0ff6f82$export$71511d61b312f219)(cell);\n                    cell = cell.filter(function(val) {\n                        return val > 0;\n                    });\n                    for(var k = 0; k < cell.length - 1; k++)if (cell[k] === cell[k + 1]) {\n                        cell[k] *= 2;\n                        totalScore += cell[k];\n                        tableChanged = true;\n                        cell[k + 1] = 0;\n                    }\n                    cell = cell.filter(function(val) {\n                        return val > 0;\n                    });\n                    while(cell.length !== 4){\n                        if (direction === \"down\") cell.unshift(0);\n                        else if (direction === \"up\") cell.push(0);\n                    }\n                    for(var j1 = 0; j1 < table.length; j1++){\n                        newTable[j1] = newTable[j1] || [];\n                        newTable[j1][i] = cell[j1];\n                    }\n                    if (!$3d28d7f1aac198f5$var$arraysEqual(originalCell, cell)) tableChanged = true;\n                }\n                for(var i1 = 0; i1 < newTable.length; i1++)for(var j2 = 0; j2 < newTable[i1].length; j2++){\n                    rows[i1].cells[j2].innerHTML = newTable[i1][j2] > 0 ? \"\".concat(newTable[i1][j2]) : \"\";\n                    rows[i1].cells[j2].className = \"field-cell\";\n                    if (newTable[i1][j2] > 0) rows[i1].cells[j2].classList.add(\"field-cell--\".concat(newTable[i1][j2]));\n                }\n                this.getScore(totalScore);\n                if (tableChanged) this.addNewCell();\n            }\n        },\n        {\n            key: \"loseWindow\",\n            value: function loseWindow() {\n                var loseWindow = document.createElement(\"div\");\n                loseWindow.className = \"lose-window\";\n                var title = document.createElement(\"h2\");\n                title.textContent = \"You lose! Try again.\";\n                loseWindow.appendChild(title);\n                document.body.appendChild(loseWindow);\n            }\n        },\n        {\n            key: \"winWindow\",\n            value: function winWindow() {\n                var winWindow = document.createElement(\"div\");\n                winWindow.className = \"win-window\";\n                var title = document.createElement(\"h2\");\n                title.textContent = \"You won! Congratulation!.\";\n                winWindow.appendChild(title);\n                document.body.appendChild(winWindow);\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\nfunction $3d28d7f1aac198f5$var$getRandomInt(num) {\n    return Math.floor(Math.random() * num);\n}\nfunction $3d28d7f1aac198f5$var$arraysEqual(arr1, arr2) {\n    return arr1.length === arr2.length && arr1.every(function(val, index) {\n        return val === arr2[index];\n    });\n}\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nif ($197cd56b15c33885$var$button) $197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$game.setStatus(\"playing\");\n        $197cd56b15c33885$var$startGameLoop();\n    } else if ($197cd56b15c33885$var$button.classList.contains(\"restart\")) {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$game.setStatus(\"idle\");\n        $197cd56b15c33885$var$startGameLoop();\n    }\n});\nvar $197cd56b15c33885$var$gameLoop;\nfunction $197cd56b15c33885$var$startGameLoop() {\n    clearInterval($197cd56b15c33885$var$gameLoop);\n    $197cd56b15c33885$var$gameLoop = setInterval(function() {\n        var newStatus = $197cd56b15c33885$var$game.getStatus();\n        if (newStatus === \"win\") {\n            $197cd56b15c33885$var$game.winWindow();\n            clearInterval($197cd56b15c33885$var$gameLoop);\n        } else if (newStatus === \"lose\") {\n            $197cd56b15c33885$var$game.loseWindow();\n            clearInterval($197cd56b15c33885$var$gameLoop);\n        }\n    }, 100);\n}\ndocument.addEventListener(\"keydown\", function(eve) {\n    if (!$197cd56b15c33885$var$game.isPlaying()) return;\n    if (eve.key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n    else if (eve.key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n    else if (eve.key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n    else if (eve.key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n});\n\n})();\n//# sourceMappingURL=Game_2048.4ccd1950.js.map\n","\"use strict\";\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require(\"../modules/Game.class\");\nconst game = new Game();\n\n// Write your code here\n\nconst button = document.querySelector(\".button\");\n\nif (button) {\n  button.addEventListener(\"click\", () => {\n    if (button.classList.contains(\"start\")) {\n      game.start();\n      game.setStatus(\"playing\");\n      startGameLoop();\n    } else if (button.classList.contains(\"restart\")) {\n      game.restart();\n      game.setStatus(\"idle\");\n      startGameLoop();\n    }\n  });\n}\n\nlet gameLoop;\n\nfunction startGameLoop() {\n  clearInterval(gameLoop);\n\n  gameLoop = setInterval(() => {\n    const newStatus = game.getStatus();\n\n    if (newStatus === \"win\") {\n      game.winWindow();\n      clearInterval(gameLoop);\n    } else if (newStatus === \"lose\") {\n      game.loseWindow();\n      clearInterval(gameLoop);\n    }\n  }, 100);\n}\n\ndocument.addEventListener(\"keydown\", (eve) => {\n  if (!game.isPlaying()) {\n    return;\n  }\n\n  if (eve.key === \"ArrowLeft\") {\n    game.moveLeft();\n  } else if (eve.key === \"ArrowRight\") {\n    game.moveRight();\n  } else if (eve.key === \"ArrowUp\") {\n    game.moveUp();\n  } else if (eve.key === \"ArrowDown\") {\n    game.moveDown();\n  }\n});\n","\"use strict\";\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    // eslint-disable-next-line no-console\n    console.log(initialState);\n  }\n\n  moveRight() {\n    this.moveHorizontally(\"right\");\n  }\n\n  moveLeft() {\n    this.moveHorizontally(\"left\");\n  }\n\n  moveUp() {\n    this.moveVertically(\"up\");\n  }\n\n  moveDown() {\n    this.moveVertically(\"down\");\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore(num) {\n    const score = document.querySelector(\".game-score\");\n    const currentScore = parseInt(score.innerHTML) || 0;\n\n    score.innerHTML = currentScore + num;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    const tbody = document.querySelector(\"tbody\");\n    const rows = tbody.rows;\n    const table = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      table[i] = [];\n\n      for (let j = 0; j < rows[i].cells.length; j++) {\n        const cell = rows[i].cells[j];\n\n        table[i].push(parseInt(cell.innerHTML) || 0);\n      }\n    }\n\n    return table;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    if (this.hasWon()) {\n      return \"win\";\n    }\n\n    if (this.hasLose()) {\n      return \"lose\";\n    }\n\n    if (this.isPlaying()) {\n      return \"playing\";\n    }\n\n    if (this.isIdle()) {\n      return \"idle\";\n    }\n  }\n\n  setStatus(newStatus) {\n    return newStatus;\n  }\n\n  hasWon() {\n    const tbody = document.querySelector(\"tbody\");\n    const rows = tbody.rows;\n\n    for (let i = 0; i < rows.length; i++) {\n      const cells = rows[i].cells;\n\n      for (let j = 0; j < cells.length; j++) {\n        if (parseInt(cells[j].innerHTML) === 2048) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  hasLose() {\n    const tbody = document.querySelector(\"tbody\");\n    const rows = tbody.rows;\n    const table = [];\n\n    for (let i = 0; i < rows.length; i++) {\n      table[i] = [];\n\n      const cells = rows[i].cells;\n\n      for (let j = 0; j < cells.length; j++) {\n        table[i][j] = parseInt(cells[j].innerHTML) || 0;\n      }\n    }\n\n    for (let i = 0; i < table.length; i++) {\n      for (let j = 0; j < table[i].length; j++) {\n        if (table[i][j] === 0) {\n          return false;\n        }\n      }\n    }\n\n    for (let i = 0; i < table.length; i++) {\n      for (let j = 0; j < table[i].length - 1; j++) {\n        if (table[i][j] === table[i][j + 1]) {\n          return false;\n        }\n      }\n    }\n\n    for (let i = 0; i < table.length - 1; i++) {\n      for (let j = 0; j < table.length - 1; j++) {\n        if (table[i][j] === table[i + 1][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  isIdle() {\n    const tdElements = document.querySelectorAll(\"tbody td\");\n\n    for (let i = 0; i < tdElements.length; i++) {\n      if (parseInt(tdElements[i].innerHTML) > 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isPlaying() {\n    const idle = this.isIdle();\n    const lose = this.hasLose();\n    const win = this.hasWon();\n\n    if (!idle && !lose && !win) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Starts the game.\n   */\n  start() {\n    const startButton = document.querySelector(\".button.start\");\n\n    startButton.classList.add(\"restart\");\n    startButton.classList.remove(\"start\");\n    startButton.textContent = \"Restart\";\n\n    const tdElements = document.querySelectorAll(\".field-cell\");\n    const tdArray = Array.from(tdElements);\n    let firstElement, secondElement;\n    let uniqueElements = new Set();\n\n    while (uniqueElements.size !== 2) {\n      firstElement = tdArray[getRandomInt(tdArray.length)];\n      secondElement = tdArray[getRandomInt(tdArray.length)];\n      uniqueElements = new Set([firstElement, secondElement]);\n    }\n\n    if (uniqueElements.size === 2) {\n      firstElement.classList.add(\"field-cell--2\");\n      firstElement.innerHTML = \"2\";\n      secondElement.classList.add(\"field-cell--2\");\n      secondElement.innerHTML = \"2\";\n    }\n\n    const startMessage = document.querySelector(\".message-start\");\n\n    if (startMessage) {\n      startMessage.remove();\n    }\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    const restartButton = document.querySelector(\".button.restart\");\n\n    restartButton.classList.remove(\"restart\");\n    restartButton.classList.add(\"start\");\n\n    restartButton.textContent = \"Start\";\n\n    const tdElements = document.querySelectorAll(\".field-cell\");\n    const tdArray = Array.from(tdElements);\n\n    tdArray.forEach((element) => {\n      element.className = \"field-cell\";\n      element.innerHTML = \"\";\n    });\n\n    const loseWindow = document.querySelector(\".lose-window\");\n\n    if (loseWindow) {\n      loseWindow.remove();\n    }\n\n    const winWindow = document.querySelector(\".win-window\");\n\n    if (winWindow) {\n      winWindow.remove();\n    }\n\n    const score = document.querySelector(\".game-score\");\n\n    if (score) {\n      score.innerHTML = \"0\";\n    }\n\n    this.setStatus(\"playing\");\n\n    const startMessage = document.createElement(\"p\");\n\n    startMessage.className = \"message message-start\";\n    startMessage.innerHTML = 'Press \"Start\" to begin game. Good luck!';\n\n    const messageContainer = document.querySelector(\".message-container\");\n\n    messageContainer.appendChild(startMessage);\n  }\n\n  // Add your own methods here\n  addNewCell() {\n    const tdElements = document.querySelectorAll(\"tbody td\");\n    const emptyCells = Array.from(tdElements).filter(\n      (cell) => cell.textContent.trim() === \"\",\n    );\n\n    if (emptyCells.length > 0) {\n      const newElement = emptyCells[getRandomInt(emptyCells.length)];\n      const randomNumber = getRandomInt(2);\n\n      if (randomNumber === 0) {\n        newElement.innerHTML = \"2\";\n        newElement.classList.add(\"field-cell--2\");\n      } else if (randomNumber === 1) {\n        newElement.innerHTML = \"4\";\n        newElement.classList.add(\"field-cell--4\");\n      }\n    }\n  }\n\n  moveHorizontally(direction) {\n    const table = this.getState();\n    const newTable = [];\n\n    const tbody = document.querySelector(\"tbody\");\n    const rows = tbody.rows;\n    let totalScore = 0;\n    let tableChanged = false;\n\n    for (let i = 0; i < table.length; i++) {\n      let row = table[i].slice();\n      const originalRow = [...row];\n\n      row = row.filter((val) => val > 0);\n\n      for (let k = 0; k < row.length - 1; k++) {\n        if (row[k] === row[k + 1]) {\n          row[k] *= 2;\n          totalScore += row[k];\n          tableChanged = true;\n          row[k + 1] = 0;\n        }\n      }\n      row = row.filter((val) => val > 0);\n\n      while (row.length !== 4) {\n        if (direction === \"right\") {\n          row.unshift(0);\n        } else if (direction === \"left\") {\n          row.push(0);\n        }\n      }\n      newTable.push(row);\n\n      if (!arraysEqual(originalRow, row)) {\n        tableChanged = true;\n      }\n    }\n\n    for (let i = 0; i < newTable.length; i++) {\n      for (let j = 0; j < newTable[i].length; j++) {\n        rows[i].cells[j].innerHTML =\n          newTable[i][j] > 0 ? `${newTable[i][j]}` : \"\";\n        rows[i].cells[j].className = \"field-cell\";\n\n        if (newTable[i][j] > 0) {\n          rows[i].cells[j].classList.add(`field-cell--${newTable[i][j]}`);\n        }\n      }\n    }\n    this.getScore(totalScore);\n\n    if (tableChanged) {\n      this.addNewCell();\n    }\n  }\n\n  moveVertically(direction) {\n    const table = this.getState();\n    const newTable = [];\n\n    const tbody = document.querySelector(\"tbody\");\n    const rows = tbody.rows;\n    let totalScore = 0;\n    let tableChanged = false;\n\n    for (let i = 0; i < table[0].length; i++) {\n      let cell = [];\n\n      for (let j = 0; j < table.length; j++) {\n        cell.push(table[j][i]);\n      }\n\n      cell = cell.slice();\n\n      const originalCell = [...cell];\n\n      cell = cell.filter((val) => val > 0);\n\n      for (let k = 0; k < cell.length - 1; k++) {\n        if (cell[k] === cell[k + 1]) {\n          cell[k] *= 2;\n          totalScore += cell[k];\n          tableChanged = true;\n          cell[k + 1] = 0;\n        }\n      }\n\n      cell = cell.filter((val) => val > 0);\n\n      while (cell.length !== 4) {\n        if (direction === \"down\") {\n          cell.unshift(0);\n        } else if (direction === \"up\") {\n          cell.push(0);\n        }\n      }\n\n      for (let j = 0; j < table.length; j++) {\n        newTable[j] = newTable[j] || [];\n        newTable[j][i] = cell[j];\n      }\n\n      if (!arraysEqual(originalCell, cell)) {\n        tableChanged = true;\n      }\n    }\n\n    for (let i = 0; i < newTable.length; i++) {\n      for (let j = 0; j < newTable[i].length; j++) {\n        rows[i].cells[j].innerHTML =\n          newTable[i][j] > 0 ? `${newTable[i][j]}` : \"\";\n        rows[i].cells[j].className = \"field-cell\";\n\n        if (newTable[i][j] > 0) {\n          rows[i].cells[j].classList.add(`field-cell--${newTable[i][j]}`);\n        }\n      }\n    }\n    this.getScore(totalScore);\n\n    if (tableChanged) {\n      this.addNewCell();\n    }\n  }\n\n  loseWindow() {\n    const loseWindow = document.createElement(\"div\");\n\n    loseWindow.className = \"lose-window\";\n\n    const title = document.createElement(\"h2\");\n\n    title.textContent = \"You lose! Try again.\";\n    loseWindow.appendChild(title);\n    document.body.appendChild(loseWindow);\n  }\n\n  winWindow() {\n    const winWindow = document.createElement(\"div\");\n\n    winWindow.className = \"win-window\";\n\n    const title = document.createElement(\"h2\");\n\n    title.textContent = \"You won! Congratulation!.\";\n    winWindow.appendChild(title);\n    document.body.appendChild(winWindow);\n  }\n}\n\nmodule.exports = Game;\n\nfunction getRandomInt(num) {\n  return Math.floor(Math.random() * num);\n}\n\nfunction arraysEqual(arr1, arr2) {\n  return (\n    arr1.length === arr2.length &&\n    arr1.every((val, index) => val === arr2[index])\n  );\n}\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","name","test","TypeError","$3d28d7f1aac198f5$var$getRandomInt","num","Math","floor","random","$3d28d7f1aac198f5$var$arraysEqual","arr1","every","val","index","$197cd56b15c33885$var$gameLoop","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","console","log","key","value","moveHorizontally","moveVertically","score","document","querySelector","currentScore","parseInt","innerHTML","rows","tbody","table","j","cells","cell","push","hasWon","hasLose","isPlaying","isIdle","newStatus","i1","j1","i2","j2","i3","j3","tdElements","querySelectorAll","idle","lose","win","firstElement","secondElement","startButton","classList","add","remove","textContent","tdArray","uniqueElements","Set","size","startMessage","restartButton","forEach","element","className","loseWindow","winWindow","setStatus","createElement","messageContainer","appendChild","emptyCells","filter","trim","newElement","randomNumber","direction","getState","newTable","totalScore","tableChanged","row","originalRow","k","unshift","concat","getScore","addNewCell","originalCell","title","body","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","$197cd56b15c33885$var$button","$197cd56b15c33885$var$startGameLoop","clearInterval","setInterval","getStatus","addEventListener","contains","start","restart","eve","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"Game_2048.4ccd1950.js.map"}